<?php
/**
 * Smarty plugin
 *
 * @package    Smarty
 * @subpackage PluginsFunction
 */

/**
 * Smarty {link} function plugin
 * Autor: Zbynek Riha
 * Type:     function<br>
 * Name:     html_image<br>
 * Purpose:  format HTML tags for the image<br>
 * Examples: {html_image file="/images/masthead.gif"}<br>
 * Output:   <img src="/images/masthead.gif" width=400 height=23><br>
 * Params:
 * <pre>
 * - link      - (required) - image height (default actual height)
 * - coolurl        - (optional) - file (and path) of image
 * - cachedForPage       - (optional) - image width (default actual width)
 * - params     - (optional) - base directory for absolute paths, default is environment variable DOCUMENT_ROOT
 * - path_prefix - prefix for path output (optional, default empty)
 * </pre>
 *
 * @link    http://www.smarty.net/manual/en/language.function.html.image.php {html_image}
 *          (Smarty online manual)
 * @author  Monte Ohrt <monte at ohrt dot com>
 * @author  credits to Duda <duda@big.hu>
 * @version 1.0
 *
 * @param array                    $params   parameters
 * @param Smarty_Internal_Template $template template object
 *
 * @throws SmartyException
 * @return string
 * @uses    smarty_function_escape_special_chars()
 */
function smarty_function_link($params, $template){
	$coolurl = true;
	$link = '?';
	$amp = '&amp;';
	$cachedForPage = true;

	if(isset($params['amp'])){
		$amp = $params['amp'];
		unset($params['amp']);
	}

	$cul = new OBE_CoolUrlLink($amp);

	foreach($params as $key => $val){
		switch($key){
			case 'coolurl':
			case 'link':
			case 'cachedForPage':
				$$key = $val;
				break;
			case 'params':
				$cul->add($val);
				break;
			default:
				if($val !== NULL){
					$cul->add($key, $val);
				}
				break;
		}
	}

	$link_str = $link . $cul->getStr();
	if(($coolurl == true || OBE_CoolUrl::isEnabled()) && ($coolurl != false)){
		$link_str = OBE_CoolUrl::getCoolUrl($link_str, $cul->getAssocArray(), ($cachedForPage !== 'false')? true: false);
	}else{
		$link_str = OBE_Http::linkSanitize($link_str);
	}

	return $link_str;
}